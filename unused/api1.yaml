
AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"
Description: Deploy a nice API.
Resources:

  APILambdaFunction:
    Type: "AWS::Lambda::Function"
    Properties:
      Role: !GetAtt APILambdaExecutionRole.Arn
      Handler: a_nice_function.handler
      Runtime: python2.7
      Timeout: 30
      Description: "A function returning some nice stuffs."

  APILambdaFunctionPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: "lambda:InvokeFunction"
      SourceArn: !Join [ "", [ "arn:aws:execute-api:", !Ref "AWS::Region", ":", !Ref "AWS::AccountId", ":*" ] ]
      FunctionName: !GetAtt APILambdaFunction.Arn
      Principal: "apigateway.amazonaws.com"

  APILambdaExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: "APILambdaExecutionRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - "lambda.amazonaws.com"
          Action:
          - "sts:AssumeRole"
      Policies:
        -
          PolicyName: "APILambdaPermission"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action:
                  - "s3:put*"
                  - "s3:getObject*"
                Resource: "*"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"

  APIDeployment:
    Type: "AWS::ApiGateway::Deployment"
    Properties:
      RestApiId: !Ref NiceAPI
      StageName: "APIDeployment"

  APIStage:
    Type: "AWS::ApiGateway::Stage"
    Properties:
      DeploymentId: !Ref APIDeployment
      MethodSettings:
        -
          DataTraceEnabled: true
          HttpMethod: "*"
          LoggingLevel: "INFO"
          ResourcePath: "/*"
      RestApiId: !Ref NiceAPI
      StageName: "APIStage"

  myAPI:
    Type: "AWS::ApiGateway::RestApi"
    Properties:
      Name: "myAPI"
      Description: "My API."
      FailOnWarnings: true
      Body:
        swagger: "2.0"
        info:
          description: "An API"
          version: "1.0.0"
          title: "MyAPI"
          termsOfService: "http://myapi.net/cgu.html"
          contact:
            email: "support@myapi.net"
          license:
            name: "Copyright (C) myAPI S.A."
            url: "myapi.net/LICENSE.txt"
        host: !Ref DomainName
        basePath: "/"
        tags:
        - name: "doc"
          description: "Operations about user"
          externalDocs:
            description: "Find the documentation about this API"
            url: "http://niceapi.net/doc"
        schemes:
        - "https"
        paths:
          /api:
            tags:
            - "collection"
            summary: "Find all the Items of a collection using the collection ID"
            description: "Returns all the items of an collection given its ID"
            operationId: "items"
            produces:
            - "application/json"
            parameters:
            - name: "collectionId"
              in: "path"
              description: "ID of the collection from which get the items"
              required: true
              type: "string"
            - name: X-NiceAPI-API-key
              in: header
              description: API API key for authentication
              required: true
              type: string
              format: string
            responses:
              "200":
                description: "successful operation"
                schema:
                  $ref: "#/ApiResponse"
            x-amazon-apigateway-integration:
              requestTemplates:
                application/json: |
                  {
                  }
              uri: !Join [ "", [ "arn:aws:apigateway:", !Ref "AWS::Region", ":lambda:path/2015-03-31/functions/", !GetAtt APILambdaFunction.Arn, "/invocations" ]]
              responses:
                default:
                  statusCode: "200"
              httpMethod: "POST"
              type: "aws"

          ApiResponse:
            type: "object"
            properties:
              code:
                type: "integer"
                format: "int32"
              results:
                type: "object"
        externalDocs:
          description: "Find out more about MyApi"
          url: "http://myapi.net/doc"
